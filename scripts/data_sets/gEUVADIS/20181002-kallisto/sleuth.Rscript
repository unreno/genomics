#!/usr/bin/env Rscript

#	https://pachterlab.github.io/sleuth_walkthroughs/pval_agg/analysis.html
#	https://github.com/griffithlab/rnaseq_tutorial/wiki/Kallisto
#	http://chagall.med.cornell.edu/RNASEQcourse/Intro2RNAseq.pdf	

suppressMessages({
	library('cowplot')
	library('sleuth')
})


#metadata <- read.table('sample_table.txt', sep='\t', header=TRUE, stringsAsFactors = FALSE)
#metadata <- dplyr::select(metadata, c('Run_s','gender_s'))
#metadata <- dplyr::select(metadata, c('sample','subject','population','gender',"Epstein-Barr virus (EBV) genome strain B95-8"))

message("Reading subjects_info.csv")
metadata <- read.table('subjects_info.csv', sep=',', header=TRUE, stringsAsFactors = FALSE)
metadata <- dplyr::select(metadata, c('sample','subject','population','gender','Epstein.Barr.virus..EBV..genome.strain.B95.8','total_read_count','unmapped_read_count','chr6.161270905.F','chr15.63374594.R','chr19.29855781.R'))

metadata[is.na(metadata)] <- 0

#,'chr11.60449890.R','chr12.124066477.R','chr12.44313659.F','chr12.44313662.F','chr13.90743183.R','chr15.63374594.R','chr15.63374595.R','chr19.21841536.R','chr19.29855781.R','chr19.57996939.R','chr1.106015875.R','chr1.111802591.R','chr1.111802592.R','chr1.111802593.R','chr1.223578310.F','chr20.12402392.F','chr4.9603240.R','chr4.9981605.R','chr5.4537604.R','chr5.64388446.F','chr5.80442266.R','chr6.161270904.F','chr6.161270905.F','chr6.32643465.F','chr7.158773385.R','chrX.93606603.R'))

#	chr6.161270905.F, chr19.29855781.R,	chr15.63374594.R

metadata <- dplyr::rename(metadata, ebv = Epstein.Barr.virus..EBV..genome.strain.B95.8)
metadata <- dplyr::mutate(metadata, ebv_portion_unmapped = ebv/unmapped_read_count)
metadata <- dplyr::mutate(metadata, ebv_portion_total = ebv/total_read_count)

#Sample,Family ID,Population,Population Description,Gender,Relationship,Unexpected Parent/Child ,Non Paternity,Siblings,Grandparents,Avuncular,Half Siblings,Unknown Second Order,Third Order,Other Comments



head(metadata)

metadata <- dplyr::mutate(metadata, path = file.path(sample , 'abundance.h5'))

#	path = file.path(Run_s , 'abundance.h5'))

head(metadata)

#metadata <- dplyr::rename(metadata, sample = Run_s)
#metadata <- dplyr::rename(metadata, sample = Sample)
#head(metadata)


#> library("biomaRt")
#> listMarts()
#> ensembl=useMart("ensembl")
#> listDatasets(ensembl)

message("Setting biomart")
mart <- biomaRt::useMart(biomart = "ensembl", dataset = "hsapiens_gene_ensembl", host = "www.ensembl.org", ensemblRedirect = FALSE)
#	Sometimes, the next step fails due to default host being down or being redirected
#	to so include the host and stop the redirection. (redirection seems to be the problem at the moment)

#mart <- biomaRt::useMart(biomart = "ENSEMBL_MART_ENSEMBL",
#	dataset = "mmusculus_gene_ensembl",
#	host = "dec2015.archive.ensembl.org")
#	# host = "ensembl.org")
#ttg <- biomaRt::getBM(
#	attributes = c("ensembl_transcript_id", "transcript_version",
#	"ensembl_gene_id", "external_gene_name", "description",
#	"transcript_biotype"),
#	mart = mart)

message("Getting biomart")
ttg <- biomaRt::getBM(attributes = c("ensembl_transcript_id", "ensembl_gene_id", "external_gene_name"), mart = mart)

message("Modifying biomart")
ttg <- dplyr::rename(ttg, target_id = ensembl_transcript_id, ens_gene = ensembl_gene_id, ext_gene = external_gene_name)

message("Subselecting biomart")
ttg <- dplyr::select(ttg, c('target_id', 'ens_gene', 'ext_gene'))
head(ttg)



so <- sleuth_prep(metadata, target_mapping = ttg,
	aggregation_column = 'ens_gene', extra_bootstrap_summary = TRUE)

#	aggregation_column = 'ens_gene', extra_bootstrap_summary = FALSE)
#	aggregation_column = 'ens_gene')
#	aggregation_column = 'ens_gene', extra_bootstrap_summary = TRUE)

head(so)



#	https://pachterlab.github.io/sleuth/docs/sleuth_fit.html

message("Fitting full")
so <- sleuth_fit(so, ~gender+population+ebv_portion_total+chr6.161270905.F+chr15.63374594.R+chr19.29855781.R, 'full')

#	sleuth_fit does not like NAs, so need to replace them with 0s or something as I've done above
#Error in dimnames(x) <- dn : 
#  length of 'dimnames' [1] not equal to array extent

message("Fitting full, less chr6")
so <- sleuth_fit(so, ~gender+population+ebv_portion_total+chr15.63374594.R+chr19.29855781.R, 'no_chr6')

message("Fitting full, less chr15")
so <- sleuth_fit(so, ~gender+population+ebv_portion_total+chr6.161270905.F+chr19.29855781.R, 'no_chr15')

message("Fitting full, less chr19")
so <- sleuth_fit(so, ~gender+population+ebv_portion_total+chr6.161270905.F+chr15.63374594.R, 'no_chr19')



#	https://pachterlab.github.io/sleuth/docs/sleuth_wt.html
#so <- sleuth_wt(so, 'gender_smale')

message("Performing likelihood ratio test on chr6")
so <- sleuth_lrt(so, 'no_chr6', 'full')

message("Performing likelihood ratio test on chr15")
so <- sleuth_lrt(so, 'no_chr15', 'full')

message("Performing likelihood ratio test on chr19")
so <- sleuth_lrt(so, 'no_chr19', 'full')

models(so)

tests(so)


#	
#	#	https://pachterlab.github.io/sleuth/docs/sleuth_results.html
#	
#	message("Obtaining gene-level differential expression results")
#	
#	#sleuth_table_gene <- sleuth_results(so, 'gender_smale', show_all = FALSE)
#	sleuth_table_gene <- sleuth_results(so, 'reduced:full', 'lrt', show_all = FALSE)
#	
#	sleuth_table_gene <- dplyr::filter(sleuth_table_gene, qval <= 0.05)
#	
#	head(sleuth_table_gene)
#	
#	
#	message("Obtaining consistent transcript-level differential expression results")
#	
#	#sleuth_table_tx <- sleuth_results(so, 'gender_smale', show_all = FALSE, pval_aggregate = FALSE)
#	sleuth_table_tx <- sleuth_results(so, 'reduced:full', 'lrt', show_all = FALSE, pval_aggregate = FALSE)
#	
#	sleuth_table_tx <- dplyr::filter(sleuth_table_tx, qval <= 0.05)
#	
#	head(sleuth_table_tx)
#	
#	
#	So it runs. Not exactly sure what each of these have done.
#	Perhaps clearer with bigger data set and more metadata to group.


plot_pca(so, color_by = 'gender')

plot_pca(so, color_by = 'population')

plot_pca(so, color_by = 'ebv_portion_total')

plot_pca(so, color_by = 'chr6.161270905.F')

plot_pca(so, color_by = 'chr15.63374594.R')

plot_pca(so, color_by = 'chr19.29855781.R')

plot_sample_heatmap(so)




#	plot_group_density(so)	- ???

#	plot_qq(so, TEST?)

#	plot_volcano(so, TEST?)


dev.off()



#	plot_bootstrap
#	
#	plot_fld.kallisto
#	
#	plot_fld.sleuth
#	
#	plot_loadings
#	
#	plot_ma
#	
#	plot_mean_var
#	
#	plot_pc_variance
#	
#	plot_sample_density
#	
#	plot_sample_heatmap
#	
#	plot_scatter
#	
#	plot_transcript_heatmap
#	
#	plot_vars
