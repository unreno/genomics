

Adding read groups to bams and replacing the originals.



nohup ./validate.bash > validate.1.out 2>&1 &

nohup ./validate.bash > validate.2.out 2>&1 &

nohup ./validate.bash > validate.3.out 2>&1 &

nohup ./validate.bash > validate.4.out 2>&1 &

nohup ./add_read_group.bash > add_read_group.out 2>&1 &

nohup ./index.bash > index.out 2>&1 &


nohup samtools view -h -o 439338.recaled.sam 439338.recaled.bam &
nohup samtools view -h -o 439338.recaled.2.bam 439338.recaled.sam &


Could probably add ...
--IGNORE MATE_NOT_FOUND
as every bam has many of these





gatk AddOrReplaceReadGroups --INPUT 439338.recaled.bam --OUTPUT 439338.tumor.bam --RGLB unknownLB --RGPL unknownPL --RGPU unknownPU --RGSM 439338.tumor

htsjdk.samtools.SAMFormatException: SAM validation error: ERROR: Record 1049197317, Read name E00521:51:h222cccxy:5:1101:18040:72473, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned
  at htsjdk.samtools.SAMUtils.processValidationErrors(SAMUtils.java:454)
  at htsjdk.samtools.BAMFileReader$BAMFileIterator.advance(BAMFileReader.java:812)
  at htsjdk.samtools.BAMFileReader$BAMFileIterator.next(BAMFileReader.java:797)
  at htsjdk.samtools.BAMFileReader$BAMFileIterator.next(BAMFileReader.java:765)
  at htsjdk.samtools.SamReader$AssertingIterator.next(SamReader.java:576)
  at htsjdk.samtools.SamReader$AssertingIterator.next(SamReader.java:548)
  at picard.sam.AddOrReplaceReadGroups.doWork(AddOrReplaceReadGroups.java:182)
  at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:282)
  at org.broadinstitute.hellbender.cmdline.PicardCommandLineProgramExecutor.instanceMain(PicardCommandLineProgramExecutor.java:25)
  at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160)
  at org.broadinstitute.hellbender.Main.mainEntry(Main.java:203)
  at org.broadinstitute.hellbender.Main.main(Main.java:289)


Converting to SAM and then back to BAM seems to fix this error.



Similar error in ...

868614.recaled.bam

htsjdk.samtools.SAMFormatException: SAM validation error: ERROR: Record 311283192, Read name A00354:16:H37GGDSXX:1:2278:7627:30076, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned


nohup samtools view -h -o 868614.recaled.sam 868614.recaled.bam &










20181120 - These bam files are aligned locally
( still not sure if aligners use the quality in fastq )
Resort by name, extract fastq, align end-to-end, extract PROPER PAIR, use that in Strelka2 )

sudo mkdir redo
sudo chown jake redo
nohup samtools sort -n --threads 40 -o redo/GM_983899.bam GM_983899.recaled.bam &


nohup samtools sort -n --threads 40 -o redo/983899.bam 983899.recaled.bam &
keeps failing?
nohup samtools sort -n --threads 40 -m 512M -o redo/983899.bam 983899.recaled.bam &
keeps failing?

Got hung up sorting both
[jake@system76-server /raid/data/raw/CCLS/bam]$ touch test
touch: cannot touch 'test': Read-only file system







wget https://github.com/biod/sambamba/releases/download/v0.6.8/sambamba-0.6.8-linux-static.gz


nohup sambamba sort -n --nthreads 40 -m 60GB --show-progress -o redo/983899.bam 983899.recaled.bam &

Took about 12 hours.
Output grew quite a bit 337GB -> 450GB !!!
Perhaps set compression level?
Will try again. Sometime.

Running through samtools really compresses. ACTUALLY, STILL RUNNING 12 hours later
samtools view -o 983899.samtools_view.bam 983899.bam

samtools view does compress it. if running sambamba sort again, set the compression level
-r--r--r-- 1 jake 450701614138 Nov 26 22:13 983899.bam
-rw-rw-r-- 1 jake 322638049280 Nov 27 18:18 983899.samtools_view.bam
-r--r--r-- 1 jake 249764383502 Nov 26 23:48 GM_983899.bam

nohup sambamba sort --uncompressed-chunks --sort-by-name  --compression-level=9 --nthreads 40 -m 50GB --show-progress -o redo/GM_983899.bam GM_983899.recaled.bam > redo/GM_983899.sambamba.log 2> redo/GM_983899.sambamba.err &

With compression 9, this is almost exactly the same size as the samtools sorted version.



cd redo
nohup samtools fastq --threads 19 -0 GM_983899.0.fastq.gz -1 GM_983899.1.fastq.gz -2 GM_983899.2.fastq.gz GM_983899.bam &
nohup samtools fastq --threads 19 -0 983899.0.fastq.gz -1 983899.1.fastq.gz -2 983899.2.fastq.gz 983899.bam &


nohup zcat 983899.1.fastq.gz | wc -l > 983899.1.fastq.gz.count &
nohup zcat 983899.2.fastq.gz | wc -l > 983899.2.fastq.gz.count &
nohup zcat GM_983899.1.fastq.gz | wc -l > GM_983899.1.fastq.gz.count &
nohup zcat GM_983899.2.fastq.gz | wc -l > GM_983899.2.fastq.gz.count &


The counts don't match!
-rw-rw-r-- 1 jake           11 Nov 27 15:05 GM_983899.1.fastq.gz.count
1579662820
-rw-rw-r-- 1 jake           11 Nov 27 14:49 GM_983899.2.fastq.gz.count
1580417276

Such a pain. Guessing that not all reads are paired. Trying again with the PAIRED flag.

nohup samtools fastq -f 1 --threads 19 -0 GM_983899.P.0.fastq.gz -1 GM_983899.P.1.fastq.gz -2 GM_983899.P.2.fastq.gz GM_983899.bam &
nohup samtools fastq -f 1 --threads 19 -0 983899.P.0.fastq.gz -1 983899.P.1.fastq.gz -2 983899.P.2.fastq.gz 983899.bam &



more counts

nohup samtools view -c -F 1 GM_983899.bam > GM_983899.bam.F1.count &
nohup samtools view -c -f 1 GM_983899.bam > GM_983899.bam.f1.count &
nohup samtools view -c -f 65 GM_983899.bam > GM_983899.bam.f65.count &
nohup samtools view -c -f 129 GM_983899.bam > GM_983899.bam.f129.count &
nohup samtools view -c -f 256 GM_983899.bam > GM_983899.bam.f256.count &
nohup samtools view -c -f 512 GM_983899.bam > GM_983899.bam.f512.count &
nohup samtools view -c -f 1024 GM_983899.bam > GM_983899.bam.f1024.count &
nohup samtools view -c -F 1 983899.bam > 983899.bam.F1.count &
nohup samtools view -c -f 1 983899.bam > 983899.bam.f1.count &
nohup samtools view -c -f 65 983899.bam > 983899.bam.f65.count &
nohup samtools view -c -f 129 983899.bam > 983899.bam.f129.count &
nohup samtools view -c -f 256 983899.bam > 983899.bam.f256.count &
nohup samtools view -c -f 512 983899.bam > 983899.bam.f512.count &
nohup samtools view -c -f 1024 983899.bam > 983899.bam.f1024.count &

==> 983899.bam.f1024.count <==
0

==> 983899.bam.f129.count <==
687471866

==> 983899.bam.f1.count <==
1374058911

==> 983899.bam.F1.count <==
0

==> 983899.bam.f256.count <==
8964764

==> 983899.bam.f512.count <==
0

==> 983899.bam.f65.count <==
686587045

==> GM_983899.1.fastq.gz.count <==
1579662820

==> GM_983899.2.fastq.gz.count <==
1580417276

==> GM_983899.bam.count <==
793788714

==> GM_983899.bam.f1024.count <==
0

==> GM_983899.bam.f129.count <==
397080437

==> GM_983899.bam.f1.count <==
793788714

==> GM_983899.bam.F1.count <==
0

==> GM_983899.bam.f256.count <==
3768690

==> GM_983899.bam.f512.count <==
0

==> GM_983899.bam.f65.count <==
396708277

==> GM_983899.P.1.fastq.gz.count <==
1260951945

==> GM_983899.P.2.fastq.gz.count <==
1261562193


WTF

Flags:
	0x1	PAIRED        .. paired-end (or multiple-segment) sequencing technology
	0x2	PROPER_PAIR   .. each segment properly aligned according to the aligner
	0x4	UNMAP         .. segment unmapped
	0x8	MUNMAP        .. next segment in the template unmapped
	0x10	REVERSE       .. SEQ is reverse complemented
	0x20	MREVERSE      .. SEQ of the next segment in the template is reversed
	0x40	READ1         .. the first segment in the template
	0x80	READ2         .. the last segment in the template
	0x100	SECONDARY     .. secondary alignment
	0x200	QCFAIL        .. not passing quality controls
	0x400	DUP           .. PCR or optical duplicate
	0x800	SUPPLEMENTARY .. supplementary alignment

  -f INT   only include reads with all  of the FLAGs in INT present [0]
  -F INT   only include reads with none of the FLAGS in INT present [0]
  -G INT   only EXCLUDE reads with all  of the FLAGs in INT present [0]







echo 2048+1024+512+256 | bc
3840

Paired and laned, but not special

nohup samtools view -@ 19 -c -f 65  -F 3840 983899.bam > 983899.bam.f065-F3840.count &
nohup samtools view -@ 19 -c -f 129 -F 3840 983899.bam > 983899.bam.f129-F3840.count &
nohup samtools view -@ 19 -c -f 65  -F 3840 GM_983899.bam > GM_983899.bam.f065-F3840.count &
nohup samtools view -@ 19 -c -f 129 -F 3840 GM_983899.bam > GM_983899.bam.f129-F3840.count &


This is just ridiculous

cat 983899.bam.f129-F3840.count 983899.bam.f065-F3840.count
682797234
682296913

cat GM_983899.bam.f129-F3840.count GM_983899.bam.f065-F3840.count
395104319
394915705



I'm gonna just have to get the raw FASTQ data again.
Or find my old script.

samtools_bam_to_paired_fastq.gawk, samtools_bam_to_paired_fastq.bash



--------------------------------------------------

Starting over?

sambamba sort

    not (unmapped or mate_is_unmapped) and first_of_pair
paired
proper_pair
unmapped
mate_is_unmapped
reverse_strand
mate_is_reverse_strand
first_of_pair
second_of_pair
secondary_alignment
failed_quality_control
duplicate
supplementary
chimeric

-F "paired and first_of_pair and not ( secondary_alignment or failed_quality_control or duplicate or supplementary)"
-F "paired and second_of_pair and not ( secondary_alignment or failed_quality_control or duplicate or supplementary)"

Next time.

Only need the fastq files so once the following is done, if it works, remove these bams.


nohup samtools view -f 1 -F 3840 983899.bam | gawk -v base=983899 -f sam_to_paired_fastq.gawk > 983899.sam_to_paired_fastq.gawk.log 2> 983899.sam_to_paired_fastq.gawk.err &

nohup samtools view -f 1 -F 3840 GM_983899.bam | gawk -v base=GM_983899 -f sam_to_paired_fastq.gawk > GM_983899.sam_to_paired_fastq.gawk.log 2> GM_983899.sam_to_paired_fastq.gawk.err &

That tooks 12-16 hours!

chmod a-w *983899.?.fastq

nohup wc -l 983899.1.fastq > 983899.1.fastq.count &
nohup wc -l 983899.2.fastq > 983899.2.fastq.count &
nohup wc -l GM_983899.1.fastq > GM_983899.1.fastq.count &
nohup wc -l GM_983899.2.fastq > GM_983899.2.fastq.count &

 cat *count
2728946344 983899.1.fastq
2728946344 983899.2.fastq
1579529356 GM_983899.1.fastq
1579529356 GM_983899.2.fastq

Whew!!!!



nohup gzip --keep --best 983899.1.fastq > 983899.1.fastq.gz.out 2> 983899.1.fastq.gz.err &
nohup gzip --keep --best 983899.2.fastq > 983899.2.fastq.gz.out 2> 983899.2.fastq.gz.err &
nohup gzip --keep --best GM_983899.1.fastq > GM_983899.1.fastq.gz.out 2> GM_983899.1.fastq.gz.err &
nohup gzip --keep --best GM_983899.2.fastq > GM_983899.2.fastq.gz.out 2> GM_983899.2.fastq.gz.err &

[5]   Exit 1                  nohup gzip --keep --best 983899.1.fastq > 983899.1.fastq.gz.out 2> 983899.1.fastq.gz.err
[6]   Exit 1                  nohup gzip --keep --best 983899.2.fastq > 983899.2.fastq.gz.out 2> 983899.2.fastq.gz.err
[7]-  Exit 1                  nohup gzip --keep --best GM_983899.1.fastq > GM_983899.1.fastq.gz.out 2> GM_983899.1.fastq.gz.err
[8]+  Exit 1                  nohup gzip --keep --best GM_983899.2.fastq > GM_983899.2.fastq.gz.out 2> GM_983899.2.fastq.gz.err

???

dmesg

[131343.193499] EXT4-fs error (device sda1): ext4_validate_block_bitmap:391: comm kworker/u82:0: bg 212156: bad block bitmap checksum
[131343.193779] Aborting journal on device sda1-8.
[131343.193912] EXT4-fs (sda1): Remounting filesystem read-only
[131343.194014] EXT4-fs error (device sda1) in ext4_writepages:2897: IO failure





nohup zcat 983899.1.fastq | wc -l > 983899.1.fastq.gz.count &
nohup zcat 983899.2.fastq | wc -l > 983899.2.fastq.gz.count &
nohup zcat GM_983899.1.fastq | wc -l > GM_983899.1.fastq.gz.count &
nohup zcat GM_983899.2.fastq | wc -l > GM_983899.2.fastq.gz.count &














nohup bowtie2 --xeq -x hg38_no_alts -1 GM_983899.1.fastq.gz -2 GM_983899.2.fastq.gz --very-sensitive --threads 20 | samtools view -o GM_983899.name.hg38_no_alts.bam - &
nohup bowtie2 --xeq -x hg38_no_alts -1 983899.1.fastq.gz -2 983899.2.fastq.gz --very-sensitive --threads 20 | samtools view -o 983899.name.hg38_no_alts.bam - &





Running out of disk space. Gonna need to remove the sorted bam files.

These will need sorted prior to being indexed.

Does bowtie2 or vcf calling use the initial read qualities, or can I save time and disk space using FASTA instead.



nohup sambamba sort --uncompressed-chunks --compression-level=9 --nthreads 40 -m 50GB --show-progress -o GM_983899.hg38_no_alts.bam GM_983899.name.hg38_no_alts.bam > GM_983899.sambamba_sort.log 2> GM_983899.sambamba_sort.err &
nohup sambamba sort --uncompressed-chunks --compression-level=9 --nthreads 40 -m 50GB --show-progress -o 983899.hg38_no_alts.bam 983899.name.hg38_no_alts.bam > 983899.sambamba_sort.log 2> 983899.sambamba_sort.err &

nohup samtools index -@ 9 GM_983899.hg38_no_alts.bam &
nohup samtools index -@ 9 983899.hg38_no_alts.bam &

select only PROPER_PAIRs

nohup samtools view -f 2 --threads 19 -o GM_983899.hg38_no_alts.PP.bam GM_983899.hg38_no_alts.bam &
nohup samtools view -f 2 --threads 19 -o 983899.hg38_no_alts.PP.hg38_no_alts.bam 983899.hg38_no_alts.bam &

nohup samtools index -@ 9 GM_983899.hg38_no_alts.PP.bam &
nohup samtools index -@ 9 983899.hg38_no_alts.PP.bam &


